let express,firebase,registerValids,db;_157‍.w("express",[["default",["express"],function(v){express=v}]]);_157‍.w("firebase",[["default",["firebase"],function(v){firebase=v}]]);_157‍.w("./public/js/register-valids.js",[["default",["registerValids"],function(v){registerValids=v}]]);_157‍.w("./firebase.js",[["db",["db"],function(v){db=v}]]);// const express = require('express')
// const firebase = require('firebase')






const app = express()

app.use(express.urlencoded({ extended: true })) // for parsing application/x-www-form-urlencoded
app.use(express.json()) // for parsing application/json
app.use(express.static('./')) // 靜態檔案

const port = 3000

registerValids.validEmail('')
.then(result => {
    _157‍.g.console.log(result)
})

registerValids.validPassword('')
.then(result => {
    _157‍.g.console.log(result)
})

app.post('/api/auth/login', function (req, res) {
    let email = req.body['email']
    let password = req.body['password']
    
    _157‍.g.console.log(email, password)

    let data = []

    // 認證信箱
    db.collection('users')
    .where('email', '==', email)
    .get()
    .then(snapshot1 => {
        data = snapshot1.docs.map(doc => doc.data())
        if(data.length <= 0) {
            res.send('無此信箱')
        } else {
            // 認證密碼
            db.collection('users')
            .where('password', '==', password)
            .get()
            .then(snapshot2 => {
                data = snapshot2.docs.map(doc => doc.data())
                if(data.length <= 0) {
                    res.send('有此信箱，但密碼錯誤')
                } else {
                    res.json(data)
                }
            })
        }
    })
    .catch(err => {
        _157‍.g.console.log('資料庫存取失敗', err)
        res.send('資料庫存取失敗')
    })
})

app.post('/api/auth/register', function (req, res) {
    let firstName = req.body['first-name']
    let lastName = req.body['last-name']
    let email = req.body['email']
    let password = req.body['password']
    
    const data = req.body

    db.collection('users').add(data)
    .then(() => {
        _157‍.g.console.log('註冊成功', data)
        res.json(data)
    })
    .catch(err => {
        _157‍.g.console.log('註冊失敗', err)
    })
})


app.listen(port, () => {
    console.log(`listening on ${ port }`)
})
